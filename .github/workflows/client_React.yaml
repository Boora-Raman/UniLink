name: Client_React

on: push

env:
    CONTAINER_REGISTRY: docker.io
    DOCKERHUB_USERNAME: gillnavi
    CLIENT_IMAGE_NAME: client_image
    SERVER_IMAGE_NAME: server_image

jobs: 
    Build_React:
        runs-on: ubuntu-latest
        steps:
        - name: Welcome
          run: echo "Welcome to Ubuntu Runner"

        - name: Checkout the repo
          uses: actions/checkout@v4

        - name: List all files
          run: ls -ltr

        - name: Move to client repo
          run: cd client

        - name: Log in to Docker Hub
          run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin

        - name: Build the Client Docker image
          run: docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.CLIENT_IMAGE_NAME }}:latest ./client

        - name: Push the Client Docker image to Docker Hub
          run: docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.CLIENT_IMAGE_NAME }}:latest

    Build_Node:
        needs: Build_React
        runs-on: ubuntu-latest
        steps:
        - name: Welcome
          run: echo "Welcome to Ubuntu Runner"

        - name: Checkout the repo 
          uses: actions/checkout@v4

        - name: List all files 
          run: ls -ltr

        - name: Move to server repo 
          run: cd server

        - name: Log in to Docker Hub
          run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin

        - name: Build the Server Docker image
          run: docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.SERVER_IMAGE_NAME }}:latest ./server

        - name: Push the Server Docker image to Docker Hub
          run: docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.SERVER_IMAGE_NAME }}:latest
