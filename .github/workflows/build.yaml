name: Docker_Build_And_Push

on: 
  push:
    branches: 
      - main 
      - "!features/*"
  pull_request: 
    types: 
      - opened
      - closed
    paths-ignore: 
      - README.md
    branches: 
      - main

env:
    AWS_REGION: us-east-1 
    ECR_REPOSITORY: unilink/artifacts  
    AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    IMAGE_TAG: ${{ github.sha }}

concurrency: 
  group: unilink-${{ github.ref }}
  cancel-in-progress: true

jobs: 
    Build_Push:
        strategy:
          fail-fast: false
          max-parallel: 2
          matrix:
            directory: [client, server]
            image_name: [client_image, server_image]
            exclude:
              - image_name: client_image
                directory: server
              - image_name: server_image
                directory: client
        runs-on: ubuntu-latest
        timeout-minutes: 5

        steps:
        - name: Checkout the Repository
          uses: actions/checkout@v4

        - name: Log in to AWS ECR
          run: |
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set region ${{ env.AWS_REGION }}
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

        - name: Check if Dockerfile Exists
          id: check_dockerfile
          run: |
            if [ -f "./${{ matrix.directory }}/Dockerfile" ]; then
              echo "Dockerfile exists."
              echo "exists=true" >> $GITHUB_ENV
            else
              echo "Dockerfile is missing in ${{ matrix.directory }}!"
              echo "exists=false" >> $GITHUB_ENV
            fi

        - name: Build the Docker Image
          if: env.exists == 'true'
          run: |
            IMAGE_URI="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}/${{ matrix.image_name }}"
            docker build -t $IMAGE_URI:latest -t $IMAGE_URI:${{ env.IMAGE_TAG }} ./${{ matrix.directory }}

        - name: Push the Docker Image to AWS ECR
          if: env.exists == 'true'
          run: |
            IMAGE_URI="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}/${{ matrix.image_name }}"
            docker push $IMAGE_URI:latest
            docker push $IMAGE_URI:${{ env.IMAGE_TAG }}

        - name: Print Failure Message if Dockerfile is Missing
          if: env.exists == 'false'
          run: echo "Skipping Docker build and push as Dockerfile is missing!"
